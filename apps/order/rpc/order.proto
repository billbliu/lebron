syntax = "proto3";

package order;
option go_package="./order";


service Order {
  rpc Orders(OrdersRequest) returns(OrdersResponse);
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc CreateOrderCheck(CreateOrderRequest) returns (CreateOrderResponse);
  rpc RollbackOrder (CreateOrderRequest) returns (CreateOrderResponse);
  rpc CreateOrderDTM(AddOrderReq) returns (AddOrderResp);
  rpc CreateOrderDTMRevert(AddOrderReq) returns(AddOrderResp);
  rpc GetOrderById(GetOrderByIdReq) returns (GetOrderByIdResp);
}

message OrdersRequest {
  int64 user_id = 1;
  int32 status = 2;
  int64 cursor = 3;
  int32 ps = 4;
}

message OrdersResponse {
  repeated OrderItem orders = 1;
  bool is_end = 2;
  string create_time = 3;
}

message OrderItem {
  string order_id = 1;
  int64 quantity = 2;
  float payment = 3;
  int64 product_id = 4;
  int64 user_id = 5;
  int64 create_time = 6;
}

message CreateOrderRequest {
  int64 uid = 1;
  int64 pid = 2;
}

message CreateOrderResponse {
}

message Orders {
  string id = 1;
  int64 userid = 2;
  int64 shoppingid = 3;
  double payment = 4;
  int64 paymenttype = 5;
  int64 postage = 6;
  int64 status = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
}

message AddOrderReq {
  int64 userid = 1;
  int64 productid = 2;
  int64 quantity = 3;
  int64 postage = 4;
  int64 receiveAddressId = 5;
}

message AddOrderResp {
  string id = 1;
}

message GetOrderByIdReq {
  int64 id = 1; //id
}

message GetOrderByIdResp {
  Orders order = 1; //order
}